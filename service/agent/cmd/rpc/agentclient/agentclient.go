// Code generated by goctl. DO NOT EDIT!
// Source: agent.proto

//go:generate mockgen -destination ./agentclient_mock.go -package agentclient -source $GOFILE

package agentclient

import (
	"context"

	"github.com/bytehello/gcc-zero/service/agent/cmd/rpc/agent"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	ReleaseKvStatReply = agent.ReleaseKvStatReply
	ReleaseKvReq       = agent.ReleaseKvReq
	ReleaseKvReply     = agent.ReleaseKvReply
	ReleaseKvStatReq   = agent.ReleaseKvStatReq

	AgentClient interface {
		ReleaseKv(ctx context.Context, in *ReleaseKvReq) (*ReleaseKvReply, error)
		ReleaseKvStat(ctx context.Context, in *ReleaseKvStatReq) (*ReleaseKvStatReply, error)
	}

	defaultAgentClient struct {
		cli zrpc.Client
	}
)

func NewAgentClient(cli zrpc.Client) AgentClient {
	return &defaultAgentClient{
		cli: cli,
	}
}

func (m *defaultAgentClient) ReleaseKv(ctx context.Context, in *ReleaseKvReq) (*ReleaseKvReply, error) {
	client := agent.NewAgentClientClient(m.cli.Conn())
	return client.ReleaseKv(ctx, in)
}

func (m *defaultAgentClient) ReleaseKvStat(ctx context.Context, in *ReleaseKvStatReq) (*ReleaseKvStatReply, error) {
	client := agent.NewAgentClientClient(m.cli.Conn())
	return client.ReleaseKvStat(ctx, in)
}
