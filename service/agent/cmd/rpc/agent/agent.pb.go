// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: agent.proto

package agent

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReleaseKvReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ReleaseKvReq) Reset() {
	*x = ReleaseKvReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseKvReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseKvReq) ProtoMessage() {}

func (x *ReleaseKvReq) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseKvReq.ProtoReflect.Descriptor instead.
func (*ReleaseKvReq) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

func (x *ReleaseKvReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ReleaseKvReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ReleaseKvReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ReleaseKvReply) Reset() {
	*x = ReleaseKvReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseKvReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseKvReply) ProtoMessage() {}

func (x *ReleaseKvReply) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseKvReply.ProtoReflect.Descriptor instead.
func (*ReleaseKvReply) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

func (x *ReleaseKvReply) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ReleaseKvStatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
}

func (x *ReleaseKvStatReq) Reset() {
	*x = ReleaseKvStatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseKvStatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseKvStatReq) ProtoMessage() {}

func (x *ReleaseKvStatReq) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseKvStatReq.ProtoReflect.Descriptor instead.
func (*ReleaseKvStatReq) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

func (x *ReleaseKvStatReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type ReleaseKvStatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Size    int64  `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	ModTime string `protobuf:"bytes,3,opt,name=ModTime,proto3" json:"ModTime,omitempty"`
}

func (x *ReleaseKvStatReply) Reset() {
	*x = ReleaseKvStatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseKvStatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseKvStatReply) ProtoMessage() {}

func (x *ReleaseKvStatReply) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseKvStatReply.ProtoReflect.Descriptor instead.
func (*ReleaseKvStatReply) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{3}
}

func (x *ReleaseKvStatReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReleaseKvStatReply) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ReleaseKvStatReply) GetModTime() string {
	if x != nil {
		return x.ModTime
	}
	return ""
}

var File_agent_proto protoreflect.FileDescriptor

var file_agent_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4b,
	0x76, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x4b, 0x76, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x2e, 0x0a, 0x10,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4b, 0x76, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x56, 0x0a, 0x12,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4b, 0x76, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x6f, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x32, 0x8b, 0x01, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4b,
	0x76, 0x12, 0x13, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x4b, 0x76, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4b, 0x76, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a,
	0x0d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4b, 0x76, 0x53, 0x74, 0x61, 0x74, 0x12, 0x17,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4b, 0x76,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4b, 0x76, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_agent_proto_rawDescOnce sync.Once
	file_agent_proto_rawDescData = file_agent_proto_rawDesc
)

func file_agent_proto_rawDescGZIP() []byte {
	file_agent_proto_rawDescOnce.Do(func() {
		file_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_agent_proto_rawDescData)
	})
	return file_agent_proto_rawDescData
}

var file_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_agent_proto_goTypes = []interface{}{
	(*ReleaseKvReq)(nil),       // 0: agent.ReleaseKvReq
	(*ReleaseKvReply)(nil),     // 1: agent.ReleaseKvReply
	(*ReleaseKvStatReq)(nil),   // 2: agent.ReleaseKvStatReq
	(*ReleaseKvStatReply)(nil), // 3: agent.ReleaseKvStatReply
}
var file_agent_proto_depIdxs = []int32{
	0, // 0: agent.agentClient.ReleaseKv:input_type -> agent.ReleaseKvReq
	2, // 1: agent.agentClient.ReleaseKvStat:input_type -> agent.ReleaseKvStatReq
	1, // 2: agent.agentClient.ReleaseKv:output_type -> agent.ReleaseKvReply
	3, // 3: agent.agentClient.ReleaseKvStat:output_type -> agent.ReleaseKvStatReply
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_agent_proto_init() }
func file_agent_proto_init() {
	if File_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseKvReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseKvReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseKvStatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseKvStatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_proto_goTypes,
		DependencyIndexes: file_agent_proto_depIdxs,
		MessageInfos:      file_agent_proto_msgTypes,
	}.Build()
	File_agent_proto = out.File
	file_agent_proto_rawDesc = nil
	file_agent_proto_goTypes = nil
	file_agent_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AgentClientClient is the client API for AgentClient service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClientClient interface {
	ReleaseKv(ctx context.Context, in *ReleaseKvReq, opts ...grpc.CallOption) (*ReleaseKvReply, error)
	ReleaseKvStat(ctx context.Context, in *ReleaseKvStatReq, opts ...grpc.CallOption) (*ReleaseKvStatReply, error)
}

type agentClientClient struct {
	cc grpc.ClientConnInterface
}

func NewAgentClientClient(cc grpc.ClientConnInterface) AgentClientClient {
	return &agentClientClient{cc}
}

func (c *agentClientClient) ReleaseKv(ctx context.Context, in *ReleaseKvReq, opts ...grpc.CallOption) (*ReleaseKvReply, error) {
	out := new(ReleaseKvReply)
	err := c.cc.Invoke(ctx, "/agent.agentClient/ReleaseKv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClientClient) ReleaseKvStat(ctx context.Context, in *ReleaseKvStatReq, opts ...grpc.CallOption) (*ReleaseKvStatReply, error) {
	out := new(ReleaseKvStatReply)
	err := c.cc.Invoke(ctx, "/agent.agentClient/ReleaseKvStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AgentClientServer is the server API for AgentClient service.
type AgentClientServer interface {
	ReleaseKv(context.Context, *ReleaseKvReq) (*ReleaseKvReply, error)
	ReleaseKvStat(context.Context, *ReleaseKvStatReq) (*ReleaseKvStatReply, error)
}

// UnimplementedAgentClientServer can be embedded to have forward compatible implementations.
type UnimplementedAgentClientServer struct {
}

func (*UnimplementedAgentClientServer) ReleaseKv(context.Context, *ReleaseKvReq) (*ReleaseKvReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseKv not implemented")
}
func (*UnimplementedAgentClientServer) ReleaseKvStat(context.Context, *ReleaseKvStatReq) (*ReleaseKvStatReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseKvStat not implemented")
}

func RegisterAgentClientServer(s *grpc.Server, srv AgentClientServer) {
	s.RegisterService(&_AgentClient_serviceDesc, srv)
}

func _AgentClient_ReleaseKv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseKvReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentClientServer).ReleaseKv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.agentClient/ReleaseKv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentClientServer).ReleaseKv(ctx, req.(*ReleaseKvReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentClient_ReleaseKvStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseKvStatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentClientServer).ReleaseKvStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.agentClient/ReleaseKvStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentClientServer).ReleaseKvStat(ctx, req.(*ReleaseKvStatReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentClient_serviceDesc = grpc.ServiceDesc{
	ServiceName: "agent.agentClient",
	HandlerType: (*AgentClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReleaseKv",
			Handler:    _AgentClient_ReleaseKv_Handler,
		},
		{
			MethodName: "ReleaseKvStat",
			Handler:    _AgentClient_ReleaseKvStat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent.proto",
}
